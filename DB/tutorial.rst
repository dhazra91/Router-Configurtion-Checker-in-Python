Tutorial
========

The following steps enlist the procedure to run this project:

1. Foremost, "welcome.py" is run. This brings forth the GUI for the application. Therefater "login.py" is called to ask for the user and admin login credentials.
2. On verifying the login credentials using the "database_creator.py" file, the user and admin are given a list of options using the "eg.py" file. The user is given the choice to either run the router compliance test or to exit. The network admin can run the compliance test in addition to viewing the existing users, adding/deleting users and exiting the application.
3. On selecting the compliance test option, the user is directed to "initiate.py" file. Therein, they are asked to enter the Management IP addresses of the three routers. This program creates a template for the orginal start-up config and also of the currrent start-up config files of each of the routers namely "ip template"and "ip template compare" and eventually compares the two. The templates basically compare the number of networks, the process IDs and area of these protocols and snmp configurations. If the two are different, then the non-compliant router's IP is flagged with 0 and the compliant routers are flagged with 1. Those flagged with 1 are eventually diplayed in green and the non-compliant routers or flagged with 0 are displayed in red in the networkx graph.Each router is labelled with its management IP.  Additionally, "initiate.py" also compares the original and current start-up config files. It eventually sends an emal and text to the network admin with details on the non-compliant router and the exact configuration that is the difference between the original and current start-up configuration files. The networkx graph of the topology is also sent as an attachment in the mail.
